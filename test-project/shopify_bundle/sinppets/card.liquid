{% comment %}
  Card Component
  A reusable card component
{% endcomment %}

{% stylesheet %}
/* card Component Styles */
.card {
  display: block;
  padding: 1rem;
  border: 1px solid var(--color-border);
  border-radius: 0.375rem;
  background: var(--color-background);
  color: var(--color-text);
}
.card:hover {
  border-color: var(--color-border-hover);
}

/* card Variants */
.card--primary {
  background: var(--color-primary);
  color: var(--color-primary-contrast);
  border-color: var(--color-primary);
}
.card--primary:hover {
  background: var(--color-primary-hover);
  border-color: var(--color-primary-hover);
}

/* card Elements */
.card__text {
  font-size: 0.875rem;
  font-weight: 500;
}

/* Responsive */
@media (max-width: 768px) {
  .card {
    padding: 0.75rem;
  }
}{% endstylesheet %}

{% comment %}
  card component
  Usage: {% render 'card', param1: 'value' %}
{% endcomment %}

{%- liquid
  assign param1 = param1 | default: 'default_value'
-%}

<div class="card card--{{ param1 }}">
  <!-- card component content -->
  <span class="card__text">card Component</span>
  <span class="card__text">card Component</span>
  <span class="card__text">card Component</span>
  <span class="card__text">card Component</span>
  <span class="card__text">card Component</span>
  <span class="card__text">card Component</span>
  <span class="card__text">card Component</span>
</div>


{% schema %}
{
  "name": "Card",
  "tag": "div",
  "class": "card",
  "settings": [
    {
      "type": "text",
      "id": "param1",
      "label": "Example parameter",
      "default": "default_value"
    }
  ]
}
{% endschema %}
